#version 330 core

in vec2 fragmentTexCoord;
in vec3 fragmentNormal;
in vec3 fragmentPos;

uniform samplerCube skyTexture;
uniform sampler2D imageTexture;
uniform vec3 viewerPos;

out vec4 color;

void main()
{   
    //TODO: get the incident vector: the direction vector from the 
    //                              viewer to the fragment
    vec3 viewerToFragment = vec3(0.0);
    //TODO: get the reflection of the incident vector about
    //      the fragment's normal
    vec3 reflectedRayDirection = vec3(0.0);
    vec4 skyColor = texture(skyTexture, reflectedRayDirection);
    vec4 baseColor = texture(imageTexture, fragmentTexCoord);
    //TODO: multiply the baseColor and the skyColor to
    //      add reflection to the object.
    color = baseColor;
}