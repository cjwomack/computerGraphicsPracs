#version 330 core

in vec2 fragmentTexCoord;
in vec3 fragmentNormal;
in vec3 fragmentPos;
in vec3 fragmentVelocity;

uniform samplerCube skyTexture;
uniform sampler2D imageTexture;
uniform vec3 viewerPos;

layout (location=0) out vec4 color;
layout (location=1) out vec4 fx;

void main()
{
    vec3 viewerToFragment = normalize(fragmentPos - viewerPos);
    vec3 reflectedRayDirection = reflect(viewerToFragment, fragmentNormal);
    vec4 skyColor = texture(skyTexture, reflectedRayDirection);
    vec4 baseColor = texture(imageTexture, fragmentTexCoord);
    color = skyColor * baseColor;
    fx.rgb = vec3(0.5) + 0.5 * fragmentVelocity;
    fx.a = 1.0;
}